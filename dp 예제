최장 증가 부분 수열
원소가 n개인 배열의 일부 원소를 골라내어 만든 부분 수열 중 각 원소가 이전 원소보다 크다는 조건을 만족하면서 그 길이가 최대인 것

배열 : [6 2 5 1 7 4 8 3]
최장 증가 부분 수열 : [2,5,7,8] 

length(k)를 위치 k에서 끝나는 최장 증가 부분 수열의 길이라고 정의하자
0 <= k <= n-1을 만족하는 모든 k에 대해 length(k)를 계산하여 답을 구하자
length(0) = 1
length(1) = 1
length(2) = 2
length(3) = 1
length(4) = 3
length(5) = 2
length(6) = 4
length(7) = 2
이때 length(k)의 값을 계산하기 위해서는 array[i] < array[k] && length(i)가 최대가 되는 i<k를 찾아야 함.
	-> length(k) = length(i)+1 // 만족하지 않는다면 length(k) = 1

//O(n^2)
for(int k=0;k<n;k++){
	length[k] = 1;
	for(int i=0;i<k;i++){
		if(array[i] < array[k]){
			length[k] = max(length[k], length[i]+1);
		}
	}
}


